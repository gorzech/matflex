% Model generated by th_beam_fem_model and one in 
% test_import_straight_beam.SID_FEM should be compatible

rng(138);

% Those saved data were used to generate SID file by MatMOREMBS
load test_mass_sid_MMM_data

% Coordinates
qf = rand(8, 1) * 0.02;

p = rand(4, 1);
p = p ./ norm(p);

V(abs(V) < 2e-11) = 0;
% Get fbody structs
fbody_exp = h_fbody3_J(qf0, M, K, V, node_idx);

% Now get stuff for SID_FEM
file_name = 'test_import_straight_beam.SID_FEM';
fbody_sid = h_fbody_sid_fem(file_name);

% SID is not using higher order terms
fbody_exp.m9 = [];

% m_rr parts - leave only constant part
fbody_exp.m8(abs(fbody_exp.m8) < 5e-11) = 0;

% m_rf part - also leave only constant part
fbody_exp.m5T(abs(fbody_exp.m5T) < 5e-11) = 0;

% Get both mass matrices
M_ffr_exp = full(ffr_mass_preintegrated(fbody_exp, p, qf));
M_sid = ffr_mass_sid(fbody_sid, p, qf);

% Translational part
m_diff = M_ffr_exp - M_sid;
m_diff(4:end, 4:end) = 0;
assert(norm(m_diff) < 1e-5)

% Rotational part - most differences
m_diff = M_ffr_exp - M_sid;
m_diff(1:3, 1:3) = 0;
m_diff(7:end, 7:end) = 0;

assert(norm(m_diff) < 8e-3, "Error of the rotational part is %g", norm(m_diff))

% Fully flexible part
m_diff = M_ffr_exp(7:end, 7:end) - M_sid(7:end, 7:end);
assert(norm(m_diff) < 1e-12)